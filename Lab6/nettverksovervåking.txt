Nettverksovervåking med Wireshark Lab06 


Studentenes navn: Andreas Lømsland, Ole Christian Nerheim, Sidney Camara, Thomas Farstad Nestaas, Kim Eikebø Lyngvær, Geir Håkon Svendsen og John Tran
Kursnavn: IS 105 Datakommunikasjon og operativsystem
Dato:17.03.15
Versjon:1.0

Oppgave 1:
A) For meg tok det 0,14 sekunder å laste in siden. 
31	3.630382000	128.119.245.12	10.0.2.15	HTTP	189	HTTP/1.1 200 OK  (text/html)
22	3.489642000	10.0.2.15	128.119.245.12	HTTP	352	GET / HTTP/1.1
    Tiden det tok å laste in siden var da 0,14 sekunder. Denne verdien kan brukes til å finne ut hvor rask
    siden lastes. Om det er unødvendig mye informasjon som trengs å lastes inn, eller om det kanskje foregår
    noe DDOS på siden. Er det veldig mye aktivitet på siden, som har en for dårlig tjeneste, så må man kanskje
    oppdatere båndbredden.

B) 
15	0.136495000	10.0.2.15	128.119.245.12	HTTP	352	GET / HTTP/1.1 

Request Method: GET
Request URI: /
Request Version: HTTP/1.1
Host: www-net.cs.umass.edu\r\n
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:33.0) Gecko/20100101 Firefox/33.0\r\n
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n
Accept-Language: en-US,en;q=0.5\r\n
Accept-Encoding: gzip, deflate\r\n
Connection: keep-alive\r\n
\r\n

21	0.262330000	128.119.245.12	10.0.2.15	HTTP	201	HTTP/1.1 200 OK  (text/html)

Request Version: HTTP/1.1
Status Code: 200
Response Phrase: OK
Date: Tue, 17 Mar 2015 09:43:56 GMT\r\n
Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.1e-fips PHP/5.4.16 mod_perl/2.0.9-dev Perl/v5.16.3\r\n
Last-Modified: Tue, 30 Oct 2007 17:00:02 GMT\r\n
ETag: "a5c-43db8bf716880"\r\n
Accept-Ranges: bytes\r\n

Request Method: GET, er brukt til å motta informasjon fra serveren ved bruk av URI (Uniform Resource Identifier).
Request URI: Den identifiserer kilden som det skal sendes en forespørsel til.
Request Version: Finner versjonen av HTTP som ble brukt for å lage siden.
Host: Viser adressen du spør om tilgang til.
User-Agent: Viser klientens operativsystem, nettleser.
Accept: Viser hvilke "content types" som blir akseptert i forespørselen.
Accept-Language: Viser til serveren vilke språk som klienten foretrekker.
Accept-Encoding: Lister de akseptabel koding
Connection: Viser til hvilken type tilkobling du har, i dette tilfellet er det "Keep-Alive" som betyr at så lenge 
            klienten fortsetter å forespørre, er tilkoblingen åpen.
Status Code: Viser til statusen for oppkoblingen, 200 i dette tilfellet, som betyr at forespørselen ble godtatt.
Response Phrase: Viser det status koden betyr. 200 = OK, 404 = Not Found, 500 = Internal Server Error", osv.
Server: Viser informasjon om serveren forespørselen blir sendt til.
Last-Modified

Oppgave 2

a) Finn innholdet i den første ”http GET”-forespørselen fra din nettleser. Her skal
ikke feltet "IF-MODIFIED-SINCE” være med. Hvorfor ikke?
        Det er første gangen siden blir åpnet, det er derfor ikke noe referansepunkt å bruke til
        "If-modified-since" Det er ikke lagret noen version i cache som kan brukes til å lastes inn
        i stedet for å laste ned en ny side.

b) Sjekk serverens respons på din forespørsel. Fikk du tilsendt den filen du spurte
etter? Hvordan kan du se om du fikk den eller ikke?
        I den første forespørselen får vi Status code: 200 og Response Phrase: "OK". 
        Vi kan se at vi fikk tilsendt den filen vi ønsket ved å se at "Line-based text data" 
        stemmer overens med filen vi får opp i nettleseren.

C) Finn innholdet i den andre "http GET"-foresprøselen. Hvorfor er "IF-MODIFIED-SINCE" med her 
og ikke i den første forespørselen? Hva er verdien i dette feltet og hva forteller det oss?
        "IF-MODIFIED-SINCE" er med i den andre GET-forespørselen fordi nettleseren allerede har siden/filen
        lagret i cachen, noe den ikke hadde ved første forsepørsel. "IF-MODIFIED-SINCE" har et tidspunkt
        og en dato som en verdi, og forteller oss når siden/filen sist ble endret. 

d)


