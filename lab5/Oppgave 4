##
import struct
f=open("hello.exe",'rb')
bin=struct.unpack('B',f.read(1))[0]
print bin
print bin >> 7
print str(bin >> 7 & 1)
print bin >> 8
print [str(bin >> x & 1) for x in (7,6,5,4,3,2,1,0)]
print ''.join([str(bin >> x & 1) for x in (7,6,5,4,3,2,1,0)])
print hex(bin)
##
127
0
0
0
['0', '1', '1', '1', '1', '1', '1', '1']
01111111
0x7f

Dette var første gangen vi kjørte igjennom oppgaven.
Bare "bin" gir oss som sagt 127.
Bin >> 7 str(bin >> 7 & 1) og Bin >>8 gir oss 0.
mens listen over tall, fra 7 til 1 gir oss vedi 1. utenom 7 som blir 0.
.join lager han en string av listen vi fikk.
hex bin gir os 0x7f som er første magic number som identifiserer ELF.

69
0
0
0
['0', '1', '0', '0', '0', '1', '0', '1']
01000101
0x45

Her er resultatet av andre gang.
Det begynner med 69
0 på de neste tre.
mens resultatet av listen blir litt anderledes.
Hex blir da 0x45 - Dette er da andre magic number.

Bin verdien forandret seg siden neste byte i filen er da andre indikator til magic number, altså 45, som er E.
når man kaller ord("E")


